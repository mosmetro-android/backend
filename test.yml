version: '2'

services:
  memcached:
    image: memcached:alpine
    restart: always

  influxdb:
    image: influxdb:alpine
    ports:
    - 8086:8086
    stdin_open: true
    volumes:
    - mosmetro-influxdb:/var/lib/influxdb
    restart: always
    environment:
      CONFIG_EVAL: |-
        if ! grep -q udp /etc/influxdb/influxdb.conf; then
          echo [[udp]];
          echo '  'enabled = true;
          echo '  'bind-address = \":8089\";
          echo '  'database = \"mosmetro\";
          echo '  'batch-size = 5000;
          echo '  'batch-timeout = \"1s\";
          echo '  'batch-pending = 10;
          echo '  'read-buffer = 0;
        fi
    entrypoint: /bin/sh
    command:
    - -c
    - eval $$CONFIG_EVAL >> /etc/influxdb/influxdb.conf; /entrypoint.sh influxd

  influxdb-proxy:
    image: thedrhax/influxdb-timeshift-proxy
    environment:
      INFLUXDB: influxdb:8086
    stdin_open: true
    tty: true

  app:
    build: .
    image: thedrhax/mosmetro-backend
    links:
      - memcached
    volumes:
    - mosmetro-www:/var/www/html
    - mosmetro-releases:/var/www/html/releases
    restart: always

  nginx:
    image: thedrhax/nginx-stateless:v0.1
    ports:
      - 8080:80
    volumes_from:
      - app
    environment:
      CONFIG_LOCATION_0: location /releases { autoindex on; }
      FPM: 'true'
      FPM_HOST: app
    restart: always

  chronograf:
    image: chronograf:alpine
    ports:
      - 8888:8888
    volumes:
      - /dev/shm/chronograf:/var/lib/chronograf
    command: chronograf --influxdb-url=http://influxdb:8086
    restart: always

  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    environment:
      GF_SERVER_ROOT_URL: http://127.0.0.1:3000/
      GF_SECURITY_ADMIN_PASSWORD: test
    volumes:
      - grafana:/var/lib/grafana
      - /dev/shm/grafana-logs:/var/log/grafana
      - grafana-config:/etc/grafana
    restart: always

volumes:
  mosmetro-www:
  mosmetro-releases:
  mosmetro-influxdb:
  grafana:
  grafana-config:
